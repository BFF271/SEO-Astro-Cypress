---
export interface Props {
  title?: string;
	description?: string;
	canonical?: string;
	nofollow?: boolean;
	noindex?: boolean;
	openGraph?: {
		basic: {
			title: string;
			type: string;
			image: string;
			url: string;
		},
		optional?: {
			audio?: string;
			description?: string; 
			determiner?: string; 
			locale?: string; 
			localeAlternate?: Array<string>;
			siteName?: string;
			video?: string;
		}
	}
}

const { 
	title,
	description,
	canoncial,
	noindex,
	nofollow,
	openGraph
} = Astro.props

if (openGraph) {
	if (
		!openGraph.basic
		|| openGraph.basic.title == null
		|| openGraph.basic.type == null
		|| openGraph.basic.image == null
		|| openGraph.basic.url == null
	) {
		throw new Error("If you pass the openGraph prop, you have to define the basic properties title, type, image, and url!")
	}
}
---

{ title ? <title>{title}</title> : null }

{ canoncial ? (
	<link 
		rel="canonical"
		href={canonical} 
	/>
) : null}

{ description ? (
	<meta
  	name="description"
  	content={description}
  />
) : null }

<meta 
	name="robots"
	contents={`${noindex ? 'noindex' : 'index'},${nofollow ? 'nofollow' : 'follow'}`}
/>

{ openGraph ? (
	<>
		<meta property="og:title" content={openGraph.basic.title} />
		<meta property="og:type" content={openGraph.basic.type} />
		<meta property="og:image" content={openGraph.basic.image} />
		<meta property="og:url" content={openGraph.basic.url} />
	</>
) : null }

{ openGraph?.optional ? (
	<>
		{ openGraph.optional.audio ? (
			<meta property="og:audio" content={openGraph.optional.audio} />
		) : null }
		{ openGraph.optional.description ? (
			<meta property="og:description" content={openGraph.optional.description} />
		) : null }
		{ openGraph.optional.determiner ? (
			<meta property="og:determiner" content={openGraph.optional.determiner} />
		) : null }
		{ openGraph.optional.locale ? (
			<meta property="og:locale" content={openGraph.optional.locale} />
		) : null }
		{ openGraph.optional.localeAlternate?.map((locale) => (
			<meta property="og:locale:alternate" content={locale} />
		))}
		{ openGraph.optional.siteName ? (
			<meta property="og:site_name" content={openGraph.optional.siteName } />
		) : null}
		{ openGraph.optional.video ? (
			<meta property="og:video" content={openGraph.optional.video } />
		) : null }
	</>
) : null }
